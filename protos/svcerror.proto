syntax = "proto3";

package svcerror;

import "header.proto";

option go_package = "github.com/cyverse-de/p/go/svcerror";

option java_multiple_files = true;
option java_package = "org.cyverse.de.protobufs";
option java_outer_classname = "ServiceErrorProtobufs";

/**
 * The types of errors that can be retuned by message handlers.
 */
enum ErrorCode {
    UNSET = 0;       // Default value for the error code. Don't set the error code to this. Use Unspecified if tempted.
    UNSPECIFIED = 1; // An error occurred, but the kind wasn't specified or included in the list.
    INTERNAL = 2;    // Internal error.
    NOT_FOUND = 3;   // The requested resource wasn't found.
    BAD_REQUEST = 4; // The request was bad/wrong is some way.
    MARSHAL_FAILURE = 5; // A failure to marshal a response.
    UNMARSHAL_FAILURE = 6; // A failure to unmarshal a request.
    PARAMETER_MISSING = 7; // A parameter is missing.
    PARAMETER_INVALID = 8; /// A parameter is invalid.
    UNAUTHENTICATED = 9;      /// Operation requires authentication, which was not provided.
    FORBIDDEN = 10;  /// Operation is no allowed.
    TIMEOUT = 11;  /// Operation timed out.
    UNSUPPORTED = 12; /// Operation is not supported.
    UNIMPLEMENTED = 13; /// Operation has not been implemented.
}

/**
 * An error returned by a request handler.
 */
message ServiceError {
     // Contains telemetry information
    header.Header header = 1;
    
    // The numeric error code from the error code enum.
    ErrorCode error_code = 2 [json_name = "error_code"];

    // The status code for the error.
    int32 status_code = 3 [json_name = "status_code"];

    // The error's message.
    string message = 4;

}