syntax = "proto3";

package qms;

import "google/protobuf/timestamp.proto";

import "header.proto";
import "svcerror.proto";
import "qms_resource_types.proto";
import "qms_users.proto";

option go_package = "github.com/cyverse-de/p/go/qms";
option java_multiple_files = true;
option java_package = "org.cyverse.de.protobufs";
option java_outer_classname = "QMSUpdateProtobufs";

/**
 * A representation of update operations, which are ways calling code can change
 * quota and usage value.
 */
message UpdateOperation {
    // The unique identifier 
    string uuid = 1;

    // The name of the update operation
    string name = 2;
}

/**
 * A representation of an update to a quota or usage value.
 */
message Update {
    // The unique identifier
    string uuid = 1;

    // Determines whether the update is for a "quota" or "usage". 
    string value_type = 2 [json_name = "value_type"];

    // The value being applied to the usage or quota.
    double value = 3;

    // The date the update takes effect.
    google.protobuf.Timestamp effective_date = 4 [json_name = "effective_date"];

    // The type of operation being done.
    UpdateOperation operation = 5;

    // The resource type for the quota or usage being updated.
    ResourceType resource_type = 6 [json_name = "resource_type"];

    // The user in the QMS system that the update is for.
    QMSUser user = 7;
}

/**
 * A request to add an update to the system.
 */
message AddUpdateRequest {
     // Contains telemetry information
    header.Header header = 1;

    // The update being added to the system.
    Update update = 2;
}

/**
 * A response to requests to add an update to the system.
 */
message AddUpdateResponse {
     // Contains telemetry information
    header.Header header = 1;

    // Error information returned by the request handler.
    svcerror.ServiceError error = 2;

    // The update added to the system.
    Update update = 3;
}

/**
 * A request to get the list of updates generated by the specified user.
 */
message UpdateListRequest {
     // Contains telemetry information
    header.Header header = 1;

    // The user whose updates have been requested.
    QMSUser user = 2;
}

/**
 * A response containing the requested list of updates generated by a user.
 */
message UpdateListResponse {
     // Contains telemetry information
    header.Header header = 1;

    // Error information returned by the request handler.
    svcerror.ServiceError error = 2;

    // The list of updates returned by the request handler.
    repeated Update updates = 3;
}