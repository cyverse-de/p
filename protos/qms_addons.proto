syntax = "proto3";

import "header.proto";
import "svcerror.proto";
import "qms_resource_types.proto";

option go_package = "github.com/cyverse-de/p/go/qms";

option java_multiple_files = true;
option java_package = "org.cyverse.de.protobufs";
option java_outer_classname = "QMSAddonProtobufs";

/**
 * Represents an add-on that can be applied to a subscription to provide a user
 * with a change in a resource quota.
 */
message Addon {
    // The unique identifier.
    string uuid = 1;

    // The name of the add-on.
    string name = 2;

    // The description of the add-on.
    string description = 3;

    // The resource type of the add-on.
    ResourceType resource_type = 4 [json_name = "resource_type"];

    // How much of the resource type is added to the quota by the add-on.
    float default_amount = 5 [json_name = "default_amount"];

    // Whether a user must pay for the add-on. Not whether the user has paid.
    bool default_paid = 6 [json_name = "default_paid"];
}

/**
 * A response to an add-on request. Contains a single add-on.
 */
 message AddonResponse {
    // Contains telemetry data.
    Header header = 1;

    // Error information generated by the request handler.
    ServiceError error = 2;

    // The add-on returned by the request handler.
    Addon addon = 3;
 }

 /**
  * A response to an add-on request that contains a list of add-ons.
  */
  message AddonListResponse {
    // Contains telemetry data.
    Header header = 1;

    // Error information generated by the request handler.
    ServiceError error = 2;

    // The list of add-ons returned by the request handler.
    repeated Addon addons = 3;
  }

/**
* A request to add an add-on to the system.
*/
message AddAddonRequest {
    // Contains telemetry information.
    Header header = 1;

    // The add-on to be added.
    Addon addon = 2;
}

/**
 * A request to get information about an add-on.
 */
 message AddonLookupRequest {
    // Contains telemetry information.
    Header header = 1;

    // Either the add-on's id or name.
    oneof addon {
        string uuid = 2;
        string name = 3;
    }
}

/**
 * A request to update an add-on. The boolean fields are needed because Go (and
 * probably other languages) needs a way to tell when to set a field to an empty
 * string, since that's the zero value for a string.
 */
 message UpdateAddonRequest {
    // Contains telemetry information.
    Header header = 1;

    // The values to set in the update.
    Addon addon = 2;

    // Whether to update the name of the addon.
    bool update_name = 3;

    // Whether to update the description of the addon.
    bool update_description = 4;

    // Whether to update the resource type of the addon.
    bool update_resource_type = 5;

    // Whether to update the default amount of the addon.
    bool update_default_amount = 6;

    // Whether to update the default paid field of the addon.
    bool uypdate_default_paid = 7;
 }

