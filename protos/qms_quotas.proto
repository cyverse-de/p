syntax = "proto3";

package qms;

import "google/protobuf/timestamp.proto";

import "header.proto";
import "svcerror.proto";
import "qms_resource_types.proto";

option go_package = "github.com/cyverse-de/p/go/qms";

option java_multiple_files = true;
option java_package = "org.cyverse.de.protobufs";
option java_outer_classname = "QMSQuotaProtobufs";

/**
 * Represents a quota in the system, which is the currently configured limit on
 * a resource type a user has associated with their plan. Overrides the quota
 * default associated with the plan the user has.
 */
message Quota {
    // The unique identifier.
    string uuid = 1;

    // The quota value (aka limit).
    float quota = 2;

    // The resource type the quota value applies to.
    ResourceType resource_type = 3 [json_name = "resource_type"];

    // A freeform text field containing info about who created the quota.
    string CreatedBy = 4 [json_name = "created_by"];

    // When the quota was created.
    google.protobuf.Timestamp CreatedAt = 5 [json_name = "created_at"];

    // A freeform text field containing info about who last modified the quota.
    string LastModifiedBy = 6 [json_name = "last_modified_by"];

    // When the quota was last modified.
    google.protobuf.Timestamp LastModifiedAt = 7 [json_name = "last_modified_at"];

    // The unique identifier of the subscription that the quota is associated with.
    string subscription_id = 8 [json_name = "subscription_id"];
}

/**
 * A response to a quota request. Contains a single quota object.
 */
message QuotaResponse {
    // Contains telemetry data.
    header.Header header = 1;

    // Error information generated by the request handler.
    svcerror.ServiceError error = 2;

    // The quota returned by the request handler.
    Quota quota = 3;
}

/**
 * A response to a quota request containing a list of quotas.
 */
message QuotaList {
    // Contains telemetry data.
    header.Header header = 1;

    // Error information generated by the request handler.
    svcerror.ServiceError error = 2;

    // A list of quotas returned by the request handler.
    repeated Quota quotas = 3;
}

/**
 * A request to add a quota to a subscription.
 */
message AddQuotaRequest {
    // Contains telemetry data.
    header.Header header = 1;

    // The quota to be added to the system.
    Quota quota = 2;
}