syntax = "proto3";

package user_requests;

import "header.proto";
import "user.proto";
import "svcerror.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/cyverse-de/p/go/user";

option java_multiple_files = true;
option java_package = "org.cyverse.de.protobufs";
option java_outer_classname = "UserRequestsProtobufs";


/**
 * A request for user information. This is kept for backwards compatibility,
 * you should really use the other request types.
 */
message UserLookupRequest {
    reserved 4; // 4 was for sessions, which aren't used anymore.

    // How to uniquely identify the user being looked up.
    oneof lookup_ids {
        string username = 1;
        string user_id = 2;
        string analysis_id = 3;
    }

    // Whether to include user logins in the response.
    bool include_logins = 5;

    // Whether to include user preferences in the response.
    bool include_preferences = 6;

    // Whether to include saved searches in the response.
    bool include_saved_searches = 7;

    // Paging limit.
    uint32 login_limit = 8;

    // Paging offset
    uint32 login_offset = 9;

     // Contains telemetry information
    header.Header header = 10;
}

/**
 * A response to a request for information about a single user.
 *
 * Please use the other, smaller requests and responses.
 */
message UserLookupResponse {
    header.Header header = 1;
    user.User basic_info = 2;
    repeated user.Login logins = 3;
    user.Preferences preferences = 4;
    repeated user.SavedSearches saved_searches = 5;
    svcerror.ServiceError error = 7;
}

// A request for information about a user.
message UserRequest {
    user.UserRef user = 1;
}

// A response containing information about a user and/or any errors
// encountered while generating the response.
message UserResponse {
    user.UserRef user = 1;
    svcerror.Error error = 2;
}

// A request for a user's preferences. Accepts either a user's UUID
// or username.
message GetUserPreferencesRequest {
    user.UserRef user = 1;
}

// A request to set a user's preferences. Accepts either a user's UUID
// or username, along with the new version of the user's preferences,
// encoded as JSON.
message SetUserPreferencesRequest {
    user.UserRef user = 1;
    string preferences = 2;
}

// A request to delete a user's preferences. Accepts user a user's UUID
// or username.
message DeleteUserPreferencesRequest {
    user.UserRef user = 1;
}

// A response containing information about a user's preferences. Contains
// user information (set according to what was in the request), preferences
// information (if it's applicable for the request), and any errors
// encountered while processing the request.
message UserPreferencesResponse {
    optional user.UserRef user = 1;
    optional string preferences = 2;
    optional svcerror.Error error = 3;
}

message PageSettings {
    // offset into the result set
    int32 offset = 1 [(buf.validate.field).int32.gte = 0];

    // page number
    int32 number = 2 [(buf.validate.field).int32.gt = 0];

    // number of results returned in a page.
    int32 size = 3 [(buf.validate.field).int32.gt = 0];
}

// Don't expose this over the wire.
message InternalPaginationContinuationToken {
    // offset into the result set
    optional int32 offset = 1 [(buf.validate.field).int32.gte = 0];

    // page number
    optional int32 number = 2 [(buf.validate.field).int32.gt = 0];

    // number of results returned in a page.
    optional int32 size = 3 [(buf.validate.field).int32.gt = 0];
}

message GetLoginsRequest {
    user.UserRef user = 1;
    optional string continuation = 2;
    optional PageSettings page = 3;
}

message AddLoginRequest {
    user.LoginWire login = 1;
}

message LoginsResponse {
    user.LoginListWire list = 1;
    optional svcerror.Error error = 2;
}

message GetSavedSearchesRequest {
    user.UserRef user = 1;
}

message SetSavedSearchesRequest {
    user.UserRef user = 1;
    user.SavedSearchesWire searches = 2;
}

message DeleteSavedSearchesRequest {
    user.UserRef user = 1;
}

message SavedSearchesResponse {
    optional user.SavedSearchesWire searches = 1;
    optional svcerror.Error error = 2;
}
