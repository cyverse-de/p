// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: monitoring_dns_check.proto

package monitoring

import (
	header "github.com/cyverse-de/p/go/header"
	svcerror "github.com/cyverse-de/p/go/svcerror"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LookupType int32

const (
	LookupType_UNSET_LOOKUP    LookupType = 0
	LookupType_INTERNAL_LOOKUP LookupType = 1
	LookupType_EXTERNAL_LOOKUP LookupType = 2
)

// Enum value maps for LookupType.
var (
	LookupType_name = map[int32]string{
		0: "UNSET_LOOKUP",
		1: "INTERNAL_LOOKUP",
		2: "EXTERNAL_LOOKUP",
	}
	LookupType_value = map[string]int32{
		"UNSET_LOOKUP":    0,
		"INTERNAL_LOOKUP": 1,
		"EXTERNAL_LOOKUP": 2,
	}
)

func (x LookupType) Enum() *LookupType {
	p := new(LookupType)
	*p = x
	return p
}

func (x LookupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LookupType) Descriptor() protoreflect.EnumDescriptor {
	return file_monitoring_dns_check_proto_enumTypes[0].Descriptor()
}

func (LookupType) Type() protoreflect.EnumType {
	return &file_monitoring_dns_check_proto_enumTypes[0]
}

func (x LookupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LookupType.Descriptor instead.
func (LookupType) EnumDescriptor() ([]byte, []int) {
	return file_monitoring_dns_check_proto_rawDescGZIP(), []int{0}
}

type DNSLookup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Addresses     []string               `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSLookup) Reset() {
	*x = DNSLookup{}
	mi := &file_monitoring_dns_check_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSLookup) ProtoMessage() {}

func (x *DNSLookup) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_dns_check_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSLookup.ProtoReflect.Descriptor instead.
func (*DNSLookup) Descriptor() ([]byte, []int) {
	return file_monitoring_dns_check_proto_rawDescGZIP(), []int{0}
}

func (x *DNSLookup) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DNSLookup) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *DNSLookup) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DNSLookup) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DNSCheckResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *header.Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Error         *svcerror.ServiceError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Lookups       []*DNSLookup           `protobuf:"bytes,3,rep,name=lookups,proto3" json:"lookups,omitempty"`
	Node          string                 `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	DateSent      string                 `protobuf:"bytes,5,opt,name=date_sent,proto3" json:"date_sent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSCheckResult) Reset() {
	*x = DNSCheckResult{}
	mi := &file_monitoring_dns_check_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSCheckResult) ProtoMessage() {}

func (x *DNSCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_dns_check_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSCheckResult.ProtoReflect.Descriptor instead.
func (*DNSCheckResult) Descriptor() ([]byte, []int) {
	return file_monitoring_dns_check_proto_rawDescGZIP(), []int{1}
}

func (x *DNSCheckResult) GetHeader() *header.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DNSCheckResult) GetError() *svcerror.ServiceError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DNSCheckResult) GetLookups() []*DNSLookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

func (x *DNSCheckResult) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *DNSCheckResult) GetDateSent() string {
	if x != nil {
		return x.DateSent
	}
	return ""
}

var File_monitoring_dns_check_proto protoreflect.FileDescriptor

const file_monitoring_dns_check_proto_rawDesc = "" +
	"\n" +
	"\x1amonitoring_dns_check.proto\x12\n" +
	"monitoring\x1a\fheader.proto\x1a\x0esvcerror.proto\"g\n" +
	"\tDNSLookup\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x1c\n" +
	"\taddresses\x18\x02 \x03(\tR\taddresses\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xc9\x01\n" +
	"\x0eDNSCheckResult\x12&\n" +
	"\x06header\x18\x01 \x01(\v2\x0e.header.HeaderR\x06header\x12,\n" +
	"\x05error\x18\x02 \x01(\v2\x16.svcerror.ServiceErrorR\x05error\x12/\n" +
	"\alookups\x18\x03 \x03(\v2\x15.monitoring.DNSLookupR\alookups\x12\x12\n" +
	"\x04node\x18\x04 \x01(\tR\x04node\x12\x1c\n" +
	"\tdate_sent\x18\x05 \x01(\tR\tdate_sent*H\n" +
	"\n" +
	"LookupType\x12\x10\n" +
	"\fUNSET_LOOKUP\x10\x00\x12\x13\n" +
	"\x0fINTERNAL_LOOKUP\x10\x01\x12\x13\n" +
	"\x0fEXTERNAL_LOOKUP\x10\x02BW\n" +
	"\x18org.cyverse.de.protobufsB\x12MonitoringDNSCheckP\x01Z%github.com/cyverse-de/p/go/monitoringb\x06proto3"

var (
	file_monitoring_dns_check_proto_rawDescOnce sync.Once
	file_monitoring_dns_check_proto_rawDescData []byte
)

func file_monitoring_dns_check_proto_rawDescGZIP() []byte {
	file_monitoring_dns_check_proto_rawDescOnce.Do(func() {
		file_monitoring_dns_check_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitoring_dns_check_proto_rawDesc), len(file_monitoring_dns_check_proto_rawDesc)))
	})
	return file_monitoring_dns_check_proto_rawDescData
}

var file_monitoring_dns_check_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_monitoring_dns_check_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_monitoring_dns_check_proto_goTypes = []any{
	(LookupType)(0),               // 0: monitoring.LookupType
	(*DNSLookup)(nil),             // 1: monitoring.DNSLookup
	(*DNSCheckResult)(nil),        // 2: monitoring.DNSCheckResult
	(*header.Header)(nil),         // 3: header.Header
	(*svcerror.ServiceError)(nil), // 4: svcerror.ServiceError
}
var file_monitoring_dns_check_proto_depIdxs = []int32{
	3, // 0: monitoring.DNSCheckResult.header:type_name -> header.Header
	4, // 1: monitoring.DNSCheckResult.error:type_name -> svcerror.ServiceError
	1, // 2: monitoring.DNSCheckResult.lookups:type_name -> monitoring.DNSLookup
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_monitoring_dns_check_proto_init() }
func file_monitoring_dns_check_proto_init() {
	if File_monitoring_dns_check_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitoring_dns_check_proto_rawDesc), len(file_monitoring_dns_check_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_monitoring_dns_check_proto_goTypes,
		DependencyIndexes: file_monitoring_dns_check_proto_depIdxs,
		EnumInfos:         file_monitoring_dns_check_proto_enumTypes,
		MessageInfos:      file_monitoring_dns_check_proto_msgTypes,
	}.Build()
	File_monitoring_dns_check_proto = out.File
	file_monitoring_dns_check_proto_goTypes = nil
	file_monitoring_dns_check_proto_depIdxs = nil
}
