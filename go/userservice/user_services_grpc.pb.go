// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.19.6
// source: user_services.proto

package userservice

import (
	context "context"
	user "github.com/cyverse-de/p/go/user"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	UserService_UserLookup_FullMethodName            = "/user.UserService/UserLookup"
	UserService_GetUserPreferences_FullMethodName    = "/user.UserService/GetUserPreferences"
	UserService_SetUserPreferences_FullMethodName    = "/user.UserService/SetUserPreferences"
	UserService_DeleteUserPreferences_FullMethodName = "/user.UserService/DeleteUserPreferences"
	UserService_GetLogins_FullMethodName             = "/user.UserService/GetLogins"
	UserService_AddLogin_FullMethodName              = "/user.UserService/AddLogin"
	UserService_GetSavedSearches_FullMethodName      = "/user.UserService/GetSavedSearches"
	UserService_SetSavedSearches_FullMethodName      = "/user.UserService/SetSavedSearches"
	UserService_DeleteSavedSearches_FullMethodName   = "/user.UserService/DeleteSavedSearches"
)

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserServiceClient interface {
	UserLookup(ctx context.Context, in *user.UserRequest, opts ...grpc.CallOption) (*user.UserResponse, error)
	GetUserPreferences(ctx context.Context, in *user.GetUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error)
	SetUserPreferences(ctx context.Context, in *user.SetUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error)
	DeleteUserPreferences(ctx context.Context, in *user.DeleteUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error)
	GetLogins(ctx context.Context, in *user.GetLoginsRequest, opts ...grpc.CallOption) (*user.LoginsResponse, error)
	AddLogin(ctx context.Context, in *user.AddLoginRequest, opts ...grpc.CallOption) (*user.LoginsResponse, error)
	GetSavedSearches(ctx context.Context, in *user.GetSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error)
	SetSavedSearches(ctx context.Context, in *user.SetSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error)
	DeleteSavedSearches(ctx context.Context, in *user.DeleteSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) UserLookup(ctx context.Context, in *user.UserRequest, opts ...grpc.CallOption) (*user.UserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.UserResponse)
	err := c.cc.Invoke(ctx, UserService_UserLookup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserPreferences(ctx context.Context, in *user.GetUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.UserPreferencesResponse)
	err := c.cc.Invoke(ctx, UserService_GetUserPreferences_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SetUserPreferences(ctx context.Context, in *user.SetUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.UserPreferencesResponse)
	err := c.cc.Invoke(ctx, UserService_SetUserPreferences_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUserPreferences(ctx context.Context, in *user.DeleteUserPreferencesRequest, opts ...grpc.CallOption) (*user.UserPreferencesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.UserPreferencesResponse)
	err := c.cc.Invoke(ctx, UserService_DeleteUserPreferences_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetLogins(ctx context.Context, in *user.GetLoginsRequest, opts ...grpc.CallOption) (*user.LoginsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.LoginsResponse)
	err := c.cc.Invoke(ctx, UserService_GetLogins_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddLogin(ctx context.Context, in *user.AddLoginRequest, opts ...grpc.CallOption) (*user.LoginsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.LoginsResponse)
	err := c.cc.Invoke(ctx, UserService_AddLogin_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetSavedSearches(ctx context.Context, in *user.GetSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.SavedSearchesResponse)
	err := c.cc.Invoke(ctx, UserService_GetSavedSearches_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SetSavedSearches(ctx context.Context, in *user.SetSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.SavedSearchesResponse)
	err := c.cc.Invoke(ctx, UserService_SetSavedSearches_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteSavedSearches(ctx context.Context, in *user.DeleteSavedSearchesRequest, opts ...grpc.CallOption) (*user.SavedSearchesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(user.SavedSearchesResponse)
	err := c.cc.Invoke(ctx, UserService_DeleteSavedSearches_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
// All implementations must embed UnimplementedUserServiceServer
// for forward compatibility.
type UserServiceServer interface {
	UserLookup(context.Context, *user.UserRequest) (*user.UserResponse, error)
	GetUserPreferences(context.Context, *user.GetUserPreferencesRequest) (*user.UserPreferencesResponse, error)
	SetUserPreferences(context.Context, *user.SetUserPreferencesRequest) (*user.UserPreferencesResponse, error)
	DeleteUserPreferences(context.Context, *user.DeleteUserPreferencesRequest) (*user.UserPreferencesResponse, error)
	GetLogins(context.Context, *user.GetLoginsRequest) (*user.LoginsResponse, error)
	AddLogin(context.Context, *user.AddLoginRequest) (*user.LoginsResponse, error)
	GetSavedSearches(context.Context, *user.GetSavedSearchesRequest) (*user.SavedSearchesResponse, error)
	SetSavedSearches(context.Context, *user.SetSavedSearchesRequest) (*user.SavedSearchesResponse, error)
	DeleteSavedSearches(context.Context, *user.DeleteSavedSearchesRequest) (*user.SavedSearchesResponse, error)
	mustEmbedUnimplementedUserServiceServer()
}

// UnimplementedUserServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUserServiceServer struct{}

func (UnimplementedUserServiceServer) UserLookup(context.Context, *user.UserRequest) (*user.UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLookup not implemented")
}
func (UnimplementedUserServiceServer) GetUserPreferences(context.Context, *user.GetUserPreferencesRequest) (*user.UserPreferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPreferences not implemented")
}
func (UnimplementedUserServiceServer) SetUserPreferences(context.Context, *user.SetUserPreferencesRequest) (*user.UserPreferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPreferences not implemented")
}
func (UnimplementedUserServiceServer) DeleteUserPreferences(context.Context, *user.DeleteUserPreferencesRequest) (*user.UserPreferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserPreferences not implemented")
}
func (UnimplementedUserServiceServer) GetLogins(context.Context, *user.GetLoginsRequest) (*user.LoginsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLogins not implemented")
}
func (UnimplementedUserServiceServer) AddLogin(context.Context, *user.AddLoginRequest) (*user.LoginsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLogin not implemented")
}
func (UnimplementedUserServiceServer) GetSavedSearches(context.Context, *user.GetSavedSearchesRequest) (*user.SavedSearchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSavedSearches not implemented")
}
func (UnimplementedUserServiceServer) SetSavedSearches(context.Context, *user.SetSavedSearchesRequest) (*user.SavedSearchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSavedSearches not implemented")
}
func (UnimplementedUserServiceServer) DeleteSavedSearches(context.Context, *user.DeleteSavedSearchesRequest) (*user.SavedSearchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSavedSearches not implemented")
}
func (UnimplementedUserServiceServer) mustEmbedUnimplementedUserServiceServer() {}
func (UnimplementedUserServiceServer) testEmbeddedByValue()                     {}

// UnsafeUserServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserServiceServer will
// result in compilation errors.
type UnsafeUserServiceServer interface {
	mustEmbedUnimplementedUserServiceServer()
}

func RegisterUserServiceServer(s grpc.ServiceRegistrar, srv UserServiceServer) {
	// If the following call pancis, it indicates UnimplementedUserServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UserService_ServiceDesc, srv)
}

func _UserService_UserLookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserLookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UserLookup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserLookup(ctx, req.(*user.UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.GetUserPreferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetUserPreferences_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserPreferences(ctx, req.(*user.GetUserPreferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SetUserPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.SetUserPreferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SetUserPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_SetUserPreferences_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SetUserPreferences(ctx, req.(*user.SetUserPreferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUserPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.DeleteUserPreferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUserPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_DeleteUserPreferences_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUserPreferences(ctx, req.(*user.DeleteUserPreferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetLogins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.GetLoginsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetLogins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetLogins_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetLogins(ctx, req.(*user.GetLoginsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.AddLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_AddLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddLogin(ctx, req.(*user.AddLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetSavedSearches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.GetSavedSearchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetSavedSearches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetSavedSearches_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetSavedSearches(ctx, req.(*user.GetSavedSearchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SetSavedSearches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.SetSavedSearchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SetSavedSearches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_SetSavedSearches_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SetSavedSearches(ctx, req.(*user.SetSavedSearchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteSavedSearches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.DeleteSavedSearchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteSavedSearches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_DeleteSavedSearches_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteSavedSearches(ctx, req.(*user.DeleteSavedSearchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserService_ServiceDesc is the grpc.ServiceDesc for UserService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserLookup",
			Handler:    _UserService_UserLookup_Handler,
		},
		{
			MethodName: "GetUserPreferences",
			Handler:    _UserService_GetUserPreferences_Handler,
		},
		{
			MethodName: "SetUserPreferences",
			Handler:    _UserService_SetUserPreferences_Handler,
		},
		{
			MethodName: "DeleteUserPreferences",
			Handler:    _UserService_DeleteUserPreferences_Handler,
		},
		{
			MethodName: "GetLogins",
			Handler:    _UserService_GetLogins_Handler,
		},
		{
			MethodName: "AddLogin",
			Handler:    _UserService_AddLogin_Handler,
		},
		{
			MethodName: "GetSavedSearches",
			Handler:    _UserService_GetSavedSearches_Handler,
		},
		{
			MethodName: "SetSavedSearches",
			Handler:    _UserService_SetSavedSearches_Handler,
		},
		{
			MethodName: "DeleteSavedSearches",
			Handler:    _UserService_DeleteSavedSearches_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_services.proto",
}
