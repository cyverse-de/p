// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qms_users.proto

// Protobuf Java Version: 3.25.3
package org.cyverse.de.protobufs;

public interface AddUserRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:qms.AddUserRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Contains telemetry information
   * </pre>
   *
   * <code>.header.Header header = 1;</code>
   * @return Whether the header field is set.
   */
  boolean hasHeader();
  /**
   * <pre>
   * Contains telemetry information
   * </pre>
   *
   * <code>.header.Header header = 1;</code>
   * @return The header.
   */
  org.cyverse.de.protobufs.Header getHeader();
  /**
   * <pre>
   * Contains telemetry information
   * </pre>
   *
   * <code>.header.Header header = 1;</code>
   */
  org.cyverse.de.protobufs.HeaderOrBuilder getHeaderOrBuilder();

  /**
   * <pre>
   * The username for the user being added to the system.
   * </pre>
   *
   * <code>string username = 3;</code>
   * @return The username.
   */
  java.lang.String getUsername();
  /**
   * <pre>
   * The username for the user being added to the system.
   * </pre>
   *
   * <code>string username = 3;</code>
   * @return The bytes for username.
   */
  com.google.protobuf.ByteString
      getUsernameBytes();

  /**
   * <pre>
   * The name of the plan the user should be subscribed to.
   * </pre>
   *
   * <code>string plan_name = 4;</code>
   * @return The planName.
   */
  java.lang.String getPlanName();
  /**
   * <pre>
   * The name of the plan the user should be subscribed to.
   * </pre>
   *
   * <code>string plan_name = 4;</code>
   * @return The bytes for planName.
   */
  com.google.protobuf.ByteString
      getPlanNameBytes();

  /**
   * <pre>
   * True if the user paid for the subscription.
   * </pre>
   *
   * <code>bool paid = 5;</code>
   * @return The paid.
   */
  boolean getPaid();

  /**
   * <pre>
   * The number of subscription periods that the subscription will be good for. The subscription period is one year,
   * so purchasing a subscription for 3 periods will create a subscription for 3 years. Consumable resources are also
   * allocated based on the number of periods, so if a subscription plan comes with 2000 CPU Hours, for example, then
   * a user who purchases 3 subscription periods will get 6000 CPU hours to use over the course of three years.
   * </pre>
   *
   * <code>int32 periods = 6;</code>
   * @return The periods.
   */
  int getPeriods();

  /**
   * <pre>
   * The end-date of the subscription. Accepted formats are `YYYY-MM-DD`, `YYYY-MM-DDThh:mm:ss`,
   * `YYYY-MM-DDThh:mm:ssZ` and `YYYY-MM-DDThh:mm:ss+hh:mm`. Date and tiestamps without time zones are assumed to
   * be in the time zone used by the CyVerse Discovery Environment itself.
   * </pre>
   *
   * <code>string end_date = 7;</code>
   * @return The endDate.
   */
  java.lang.String getEndDate();
  /**
   * <pre>
   * The end-date of the subscription. Accepted formats are `YYYY-MM-DD`, `YYYY-MM-DDThh:mm:ss`,
   * `YYYY-MM-DDThh:mm:ssZ` and `YYYY-MM-DDThh:mm:ss+hh:mm`. Date and tiestamps without time zones are assumed to
   * be in the time zone used by the CyVerse Discovery Environment itself.
   * </pre>
   *
   * <code>string end_date = 7;</code>
   * @return The bytes for endDate.
   */
  com.google.protobuf.ByteString
      getEndDateBytes();
}
